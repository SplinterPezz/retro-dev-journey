.structure-container {
  pointer-events: none;
  transition: all 0.3s ease;
}

.structure-sprite {
  border: none !important;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  transition: all 0.3s ease;

  /* Pixel art styling */
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
}

.signpost-shadow {
  position: absolute;
  top: 525px;
  transform: translateX(-50%);
  width: 50px;
  height: 8px;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 50%;
  z-index: -1;
  margin-left: -70px;
}

.technology-shadow {
  position: absolute;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.3);
  border-radius: 50%;
  z-index: -1;
}

/* Special styling for future opportunity */
.structure-container.future-opportunity .structure-sprite {
  background: linear-gradient(135deg, #ffd700, #ffed4e);
  animation: future-glow 2s infinite;
}

@keyframes future-glow {

  0%,
  100% {
    box-shadow: 0 0 10px rgba(255, 215, 0, 0.5);
  }

  50% {
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.8);
  }
}

.structure-icon {
  font-size: 24px;
  filter: drop-shadow(1px 1px 2px rgba(0, 0, 0, 0.5));
}

/* Building image styling */
.structure-building-image {
  width: 512px;
  height: 512px;
  object-fit:contain;

  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
}

.structure-technology-image {
  width: 256px;
  height: 256px;
  object-fit:contain;

  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
}

.structure-signpost-image {
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: crisp-edges;

  width:128px;
  height: 128px;
  position: absolute;
  top: 410px;
  margin-left:-120px;
  object-fit: contain;
}

/* Hover/nearby effects */
.structure-container.nearby .structure-sprite {
  transform: scale(1.1);
}

.structure-container.nearby {
  z-index: 60;
}

/* Enhanced glow for future opportunity when nearby */
.structure-container.future-opportunity.nearby .structure-sprite {
  transform: scale(1.2);
  box-shadow: 0 0 25px rgba(255, 215, 0, 0.9);
}

/* Structure label */
.structure-label {
  position: absolute;
  top: -35px;
  left: 50%;
  transform: translateX(-50%);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
  text-align: center;
  min-width: 100px;
}

.structure-label.visible {
  opacity: 1;
}

.structure-container.technology::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url('/public/sprites/details/sparkling.gif');
  background-size: auto;
  background-position: unset;
  background-repeat: no-repeat;
  pointer-events: none;

  opacity: 0.7;
  
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
}

.structure-label span {
  background: rgba(0, 0, 0, 0.9);
  color: #ffd700;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: bold;
  font-family: 'Courier New', monospace;
  white-space: nowrap;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
  border: 1px solid #8b4513;
  display: block;
}

/* Special label styling for future opportunity */
.structure-container.future-opportunity .structure-label span {
  background: rgba(255, 215, 0, 0.9);
  color: #000;
  border: 1px solid #ffb000;
  animation: label-glow 2s infinite;
}

@keyframes label-glow {

  0%,
  100% {
    box-shadow: 0 0 5px rgba(255, 215, 0, 0.5);
  }

  50% {
    box-shadow: 0 0 10px rgba(255, 215, 0, 0.8);
  }
}

/* Interaction hint */
.interaction-hint {
  margin-top: 5px;
  background: rgba(255, 215, 0, 0.9);
  color: #000;
  padding: 2px 6px;
  border-radius: 3px;
  font-size: 10px;
  font-weight: bold;
  animation: pulse 1.5s infinite;
}

.structure-container.future-opportunity .interaction-hint {
  background: rgba(255, 255, 255, 0.95);
  color: #8b4513;
  font-weight: bolder;
  animation: pulse-future 1s infinite;
}

@keyframes pulse {

  0%,
  100% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: 0.7;
    transform: scale(0.95);
  }
}

@keyframes pulse-future {

  0%,
  100% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: 0.8;
    transform: scale(1.05);
  }
}

.structure-container.future-opportunity .structure-connection-line {
  background: linear-gradient(to bottom,
      rgba(255, 215, 0, 0.8) 0%,
      rgba(255, 215, 0, 0.3) 100%);
  width: 3px;
  animation: connection-pulse 2s infinite;
}

@keyframes connection-pulse {

  0%,
  100% {
    opacity: 0.7;
  }

  50% {
    opacity: 1;
  }
}

/* Interaction radius indicator (development only) */
.interaction-radius {
  position: absolute;
  border: 2px dashed rgba(255, 215, 0, 0.3);
  border-radius: 50%;
  pointer-events: none;
  z-index: -1;
}

/* Building specific styles */
.structure-container.building .structure-sprite {
  border-style: solid;
}

.structure-container.building .structure-icon {
  color: #f4a460;
}

/* Statue specific styles */
.structure-container.statue .structure-sprite {
  border-style: solid;
  border-radius: 4px;
}

.structure-container.statue .structure-icon {
  color: #dcdcdc;
}

/* Animation for newly discovered structures */
.structure-container.discovered {
  animation: discovered 0.8s ease-out;
}

@keyframes discovered {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }

  50% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .structure-sprite {
    width: 40px;
    height: 40px;
  }

  .structure-icon {
    font-size: 20px;
  }

  .structure-label span {
    font-size: 10px;
    padding: 2px 6px;
  }

  .interaction-hint {
    font-size: 8px;
    padding: 1px 4px;
  }
}

@media (max-width: 480px) {
  .structure-sprite {
    width: 35px;
    height: 35px;
  }

  .structure-icon {
    font-size: 18px;
  }

  .structure-container {
    left: calc(var(--x) - 17.5px) !important;
    top: calc(var(--y) - 17.5px) !important;
  }
}